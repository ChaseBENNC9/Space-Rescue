name: Create Build and Release

on:
  pull_request:
    types:
      - closed
    branches:
      - main
jobs:

  release-project:
    name: Release Project
    runs-on: ubuntu-latest
    needs: build
    steps: 
      - uses: actions/download-artifact@v3
        id: download
        with:
          name: build
      - name: echo
        run: echo ${{steps.download.outputs.download-path}}
      - name: list dir
        run: ls
      - name: ZIP Build
        id: zip-release
        uses: thedoctor0/zip-release@master
        with: 
          type: zip
          filename: build.zip
      - name: Check if the pull request was merged
        id: check_merge
        run: |
          if [ "${{ github.event.pull_request.merged }}" == "true" ]; then
            echo "Pull request was merged!"
            echo "::set-output name=pr_body::${{ github.event.pull_request.body }}"
          else
            echo "Error: Pull request to main branch was closed but not merged."
            exit 1
          fi
      - name: Print Current Working Directory
        id: pwd_step
        run: |
          current_dir=$(pwd)
          echo "Current Working Directory: $current_dir"
          echo "::set-output name=current_dir::$current_dir"
      - name: List contents of the directory
        run: | 
          ls ${{steps.pwd_step.outputs.current_dir}}
      - name: Check if file exists
        run: |
          if test -e /home/runner/work/Space-Rescue/Space-Rescue/build.zip; then
            echo "File exists"
            mkdir -p release
            mv /home/runner/work/Space-Rescue/Space-Rescue/build.zip release/build.zip
            cd release
            echo pwd
            ls .
          else
            echo "Non existent file requested"
          fi
        id: check_file
      - name: create body.md
        uses: 1arp/create-a-file-action@0.2
        with:            
          path: /release
          file: body.md
            # The content of the file
          content: ${{ steps.check_merge.outputs.pr_body }}
          
      - name: list files in release folder
        run: ls ${{steps.pwd_step.outputs.current_dir}}/release
      - name: Check Body Contents
        run: cat /release/body.md

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.REPO_TOKEN }}
      - name: Create a GitHub release
        id: new_release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.REPO_TOKEN }}
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          bodyFile: /home/runner/work/Space-Rescue/Space-Rescue/release/body.md
      - name: Upload to Github Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
        with:
          upload_url: ${{ steps.new_release.outputs.upload_url }}
          asset_path: /home/runner/work/Space-Rescue/Space-Rescue/release/build.zip
          asset_name: build-${{ steps.tag_version.outputs.new_tag}}.zip
          asset_content_type: application/zip
  build:
    name: Build my project âœ¨
    runs-on: ubuntu-latest
    steps:
      - name: Check if the pull request was merged
        id: check_merge
        run: |
          if [ "${{ github.event.pull_request.merged }}" == "true" ]; then
            echo "Pull request was merged!"
          else
            echo "Error: Pull request to main branch was closed but not merged."
            exit 1
          fi
      - name: list dir
        run: ls
      - name: create body.md
        uses: 1arp/create-a-file-action@0.2
        with:            
          file: body.md
            # The content of the file
          content: ${{ github.event.pull_request.body }}
      - name: Check Body Contents
        run: cat body.md
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          lfs: true
    
      
      
      - name: Print Current Working Directory
        run: pwd
      - name: list the Current Working Directory using ls
        run: ls
      - name: list the CWD using ls -a
        run: ls -a
      # Cache
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: StandaloneWindows
          allowDirtyBuild: true
          buildName: SpaceRescue
        
      - name: Print Current Working Directory
        run: pwd
      - name: list the CWD using ls
        run: ls
      - name: list the build  Directory using ls
        run: ls build

      # Output
      - uses: actions/upload-artifact@v3
        with:
          name: build
          path: build/StandaloneWindows
          
